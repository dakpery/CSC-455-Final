drop table if exists users;
drop table if exists platforms;
drop table if exists cryptos;
drop table if exists user_wallet;
drop table if exists prices;
drop table if exists crypto_stats;
drop table if exists prices_aftertrigger;
drop trigger if exists new_price;

create table users (
		user_id varchar(45),
		password varchar(45) not null,
		primary key (user_id)
  );

 

create table platforms (
		blockchain_platform varchar(100),
		num_of_assets int,
		primary key (blockchain_platform)
  );

 

create table cryptos (
		crypto_name varchar(100),
		date_release DATE,
		blockchain_platform varchar(100),
        circulating_supply bigint,
		market_cap bigint,
		primary key (crypto_name),
		foreign key (blockchain_platform) references platforms(blockchain_platform)
    );

  

create table user_wallet (
		user_id varchar(45),
		crypto_name varchar(100),
		balance decimal(25),
		date_bought date,
		primary key (user_id,crypto_name),
		foreign key (user_id) references users(user_id) on delete cascade,
		foreign key (crypto_name) references cryptos(crypto_name) on delete cascade
	);

               
               

create table prices (
		crypto_name varchar(100),
		current_USD decimal(10,6),
		primary key (crypto_name),
		foreign key (crypto_name) references cryptos(crypto_name) on delete cascade
	);      



create table prices_afterTrigger(
	crypto_name varchar(100),
    current_USD decimal(10,6),
    current_BTC_Rate decimal(10,6),
	foreign key (crypto_name) references prices(crypto_name) on delete cascade
);


CREATE TRIGGER new_price 
AFTER INSERT ON prices
FOR EACH ROW 
  INSERT INTO prices_aftertrigger (crypto_name, current_USD, current_BTC_Rate)
  VALUES (NEW.crypto_name, NEW.current_USD, current_USD/6416.16);
  
  
  

  
  
